# Define the user and worker processes for Nginx.
user nginx;                # Nginx runs as the 'nginx' user for security.
worker_processes auto;     # Automatically determine the number of worker processes based on CPU cores.

# Configure connection-related settings.
events {
    worker_connections 1024;   # Maximum number of connections each worker process can handle.
}

# Define the HTTP server configuration.
http {
    # Include MIME types for file handling (e.g., .html, .css, .js).
    include /etc/nginx/mime.types;

    # Define a server block for HTTPS traffic.
    server {
        # Enable HTTPS (SSL) and bind to IPv4 and IPv6.
        listen 443 ssl;          # Listen for HTTPS traffic on port 443 (IPv4).
        listen [::]:443 ssl;     # Listen for HTTPS traffic on port 443 (IPv6).

        # Specify the server name (domain). Use the environment variable DOMAIN_NAME, defaulting to 'localhost' if not set.
        server_name ${DOMAIN_NAME:-localhost};

        # SSL/TLS configuration
        ssl_certificate /etc/nginx/ssl/nginx.crt;     # Path to the SSL certificate file.
        ssl_certificate_key /etc/nginx/ssl/nginx.key; # Path to the private key file.
        ssl_protocols TLSv1.2 TLSv1.3;               # Use modern and secure TLS protocols (disable older versions).

        # Define the root directory for serving static files.
        root /var/www/html;      # The directory where static files (e.g., HTML) are stored.
        index index.php;         # The default file to load when a directory is accessed.

        # Handle requests for files or directories.
        location / {
            # Try to serve the requested file directly. If not found:
            # - Try serving the directory.
            # - Pass the request to index.php with the original query string.
            # - If nothing matches, return a 404 error.
            try_files $uri $uri/ /index.php?$args =404;
        }

        # Handle requests for PHP files.
        location ~ \.php$ {
            # Forward PHP requests to a backend service. By default, this points to 'wordpress:9000'.
            fastcgi_pass ${PHP_BACKEND:-wordpress:9000};

            # Include FastCGI parameters (e.g., SCRIPT_FILENAME).
            include fastcgi_params;

            # Define the full path to the PHP script.
            fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        }